\field{物理数学}
\title{工学的な応用}
\comment{。}
\prev{fourier05}
\next{}


\section{用語の混在}

　ここまでは「フーリエ級数展開」と「フーリエ変換」をはっきり区別して話してきた。
　しかし理学系と工学系とでは用語の使い方に少し違いがあったりする。
　工学系ではどちらについても「フーリエ変換」と呼ぶことが多いのである。
　どちらもほとんど同じような意味のものなのだからそれも仕方ないことではあるのだ。

<P>

　分野の垣根をまたいで学ぼうとするときに用語の使い方の文化の差によって困惑させられることがあるので、
ここで注釈程度に説明を入れておこうというのが今回の趣旨である。
　ついでに身の回りで応用されているフーリエ変換の具体例を幾つか紹介しておこうと思う。

<P>

　まず、工学系ではフーリエ級数展開の係数を求める作業も「フーリエ変換」と呼び、
その係数から元の関数$ f(x) $を再現する作業を「フーリエ逆変換」と呼んだりすることを覚えておこう。

<P>

　そして「フーリエ変換は身の回りのものに広く応用されている」という解説を聞くことがよくあるが、
ほとんどの場合、使われているのは「フーリエ級数展開」の方である。


% =======================================================================

\section{離散フーリエ変換}

　「離散フーリエ変換」という言葉を聞くことがある。
　フーリエ変換のスペクトルが連続的で、フーリエ級数展開のスペクトルが離散的だから、
「これはフーリエ級数展開の別名かいな？」と思ってしまうかも知れないが、そうではない。

<P>

　フーリエ変換をするにも、フーリエ級数展開の係数を求めるにも、その公式には積分計算が入っている。
　しかし情報処理のためにフーリエ変換を応用する際にはこの部分をもっと楽な計算で代用することが多い。
　デジタルなデータは連続的な関数$ f(x) $ではなく、とびとびの値を持った$ a_x \ (x=0,1,2\cdots) $というものである。
　これを帯グラフのようなものだと考えてやれば、
足し算だけでグラフの面積が計算できて、積分したのと同じことになるだろう。
　このような計算を無限の範囲でやるのは無限の手間が掛かるので無理である。
　当然ながら有限の個数のデータで計算するので、フーリエ級数展開の方の公式を使うことにはなるだろう。

<P>

　実際はただの積分ではなく$ e^{i\frac{2\pi}{L}nx} $との内積が必要になるわけだが、これについても厳密なことを実行する必要はない。
　その場その場での$ e^{i\frac{2\pi}{L}nx} $の値との積を作って和を取っていくだけで、
ちゃんと積分したのとおおよそ同じ結果が得られることになる。

<tex>
c_n \ &=\ \frac{1}{L} \int_0^L f(x) \ e^{-i\frac{2\pi}{L}nx} \diff x \\[3pt]
&\ \ \ \ \ \ \Downarrow \\[3pt]
c_n \ &=\ \frac{1}{N {\scriptstyle \Delta} L} \sum_{x=1}^{N} a_x \ e^{-i\frac{2\pi}{(N{\scriptscriptstyle \Delta}L)}n(x{\scriptscriptstyle \Delta}L)} {\scriptstyle \Delta} L \\[3pt]
&\ \ \ \ \ \ \Downarrow \\[3pt]
c_n \ &=\ \frac{1}{N} \sum_{x=1}^{N} a_x \ e^{-i\frac{2\pi}{N}nx}
</tex>

　このように「離散的なデータ」である$ a_x $を関数$ f(x) $だと見たてて、簡略的な計算で必要な結果を得るこの技を離散フーリエ変換と呼ぶのである。
　コンピュータになるべく楽をさせてやろうとしてプログラムを組めば、専門家でなくともすぐに思いつく手法だ。

<P>

　ただし、この方法で誤差がどの程度発生するのか、
この方法はどこまで適用可能かということをしっかり理論化しようとすると、多少面倒くさい議論が待っている。
　工学系の人たちはそういうことを学ばなければならない。

% =======================================================================

\section{離散コサイン変換}

　今話した離散フーリエ変換の計算をコンピュータにさせるときに、$ e^{i\frac{2\pi}{N}nx} $が出てくるのは面倒くさい。
　これは複素数であり、実数と虚数を別々に計算させないといけないからだ。
　しかし、元の関数が偶関数であれば虚数部分は打ち消し合って、フーリエ変換後の関数は実数になるという話を思い出そう。
　虚数部分はわざわざ計算しなくても良くなるわけだ。

<tex>
e^{i\frac{2\pi}{N}nx} =\ \cos\left(\frac{2\pi}{N}nx\right) \ +\ i\,\sin\left(\frac{2\pi}{N}nx\right)
</tex>

なのだから、$ \cos $部分だけを使って計算すれば目的は果たせることになる。

<P>

　とは言うものの、扱う関数はいつも偶関数になっているとは限らない。
　特別な場合にしか使えないのだろうか？
　いや、同じ関数を対称に並べたものを考えて、無理やり偶関数に仕立て上げてしまえばいいのである。
　このようにして計算したフーリエ変換を逆変換すると、もちろん対称な関数が復元されてくることになるわけだが、
その半分については無視して捨ててしまえばいい。
　プログラム的には、計算してから半分を捨てるなんて無駄なことをする必要はなく、
最初からその部分を計算しないようにすればいいだろう。

<P>

　フーリエ変換も逆変換も、コサイン関数だけを使って手間を大幅に減らすことができるのである。
　このような工学的手法のことを「離散コサイン変換」と呼んでいる。

% =======================================================================

\section{高速フーリエ変換}

　以上のような工夫によって、足し算と掛け算だけでフーリエ変換を実行できるわけだが、
コンピュータの計算量をさらに大幅に減らすことができる計算手順の工夫が見つかっている。
　それを「高速フーリエ変換」と呼ぶ。

<P>

　コンピュータは足し算に比べて掛け算にずっと多くの計算時間が掛かってしまう。
　そこで、足し算の数を少しばかり増やしてでも代わりに掛け算の回数を減らせるのなら、
計算時間の短縮に効果的である。

<P>

　その方法は巧妙でなかなか面白いものだが、説明が面倒なのでここでは紹介はしない。
　$ e^{i\frac{2\pi}{N}nx} $が指数関数であって、二つの積に分けられることを利用して、
同種の計算をうまくまとめるようにしてある。
　だからこの方法は離散コサイン変換には適用できない。
　離散フーリエ変換を高速化させる技である。

<P>

　その方法は一つきりではなく、他に何通りもあるらしい。
　また、離散コサイン変換を高速化する方法もあるようだ。

% =======================================================================

\section{CDの記録方式}
<P>

　音楽 CD の時代も終わりそうな雰囲気が出てきたが、まだしばらくは使われるだろう。

　CD にもフーリエ変換が使われていると言われることがあるが、
直接使われているわけではなく、技術の背景にその思想があるのである。

フーリエ解析の結果を裏付けとして

　CD が世に出始めた頃、私は中学生だった。
　当時は同じアルバムの CD とLPレコードが同時に発売されていたのだが、
長い間 LP バージョンの方を買い続けていた。
　レコード盤の方が明らかに音質が良いと感じていたからだ。

<P>

　これには理由がある。
　当時売り出したばかりの CD プレイヤーの店頭デモの音は私にとってやけに耳障りだった。
　当時の私の耳はかなり良い方だったし、カメラのフラッシュの充電音などのモスキート音も遠くから聞き取ることが出来た。
　　しかしそういう聞こえにくい高い音とはまた違う。
　明らかに全体的にシャラシャラした音が混じっているのだ。

<P>

　当時出たばかりのデッキは「オーバーサンプリング」という技術を使っていなかったと思われる。
　デジタル的に記録されたデータをデジタル的に元の波形に戻すと、
まるで帯グラフのようなカクカクした波形になっているわけだ。
　これをそのままスピーカーに入れれば、デルタ関数的なノイズが混じることになる。
　単に耳に聞こえない高音部のノイズをカットしたところで消せないものである。

　「オーバーサンプリング」とは、記録されている波形よりもさらに細かい時間で区切って、
途中を補間した波形を作り、より滑らかな曲線に近付けてから再生する技術で、今では当たり前になっている。
　かなり前の高級機で 4 倍から 8 倍、今では安物でも 16 倍 くらいにしているのではなかろうか。



% =======================================================================

\section{声紋など}

　特定の周波数の抽出など。

% =======================================================================

\section{画像、動画の圧縮}

　特定の周波数の抽出など。

% =======================================================================

\section{CTスキャン}

　特定の周波数の抽出など。



